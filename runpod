#!/bin/sh
# $Log: $
#
# $Id: $

usage()
{
  echo "`basename $0` --id=imageid [--name=name] [--systemd=systemd_path|auto|svscan]"
  echo "  [--args=extra_args1 --args=extra_args2 ... --args=extra_argsn]"
  echo "  [--host=host] [--cgroup=cgroup]"
  echo "  [--port=lport1:rport1 --port=lport2:rport2 ... --port=lportn:rportn]"
  echo "  [--volume=dir:mount_point1 --volume=dir:mount_point2 ... --volume=dir:mount_pointn]"
  echo "  [--capability=cap1 --capability=cap2 ... --capability=cap3] | [capability=auto]"
  echo "  [--command=podman|docker]"
  echo
  echo "lport - local port, rport - remote port"
  exit $1
}

command=podman
name="test"
detached=0
while test $# -gt 0; do
  case "$1" in
    -*=*)
      optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
    ;;
    *)
      optarg=""
    ;;
  esac

  case "$1" in
    --command=*)
      command=$optarg
      if [ " $command" != " podman" -a " $command" != " docker" ] ; then
        echo "command should be podman or docker" 1>&2
        usage 1
      fi
      command="exec $command"
    ;;
    --id=*)
      imageid=$optarg
    ;;
    --name=*)
      name=$optarg
    ;;
    --host=*)
      host_arg="-h $optarg"
    ;;
    --port=*)
      port_args="$port_args""-p $optarg "
    ;;
    --capability=*)
       if [ " $optarg" = " auto" ] ; then
         cap_args="$cap_args--cap-add SYS_PTRACE --cap-add SYS_ADMIN "
         cap_args="$cap_args--cap-add IPC_LOCK   --cap-add SYS_RESOURCE "
       else
         cap_args="$cap_args--cap-add $optarg "
       fi
    ;;
    --cgroup=*)
      cgroup="$optarg"
    ;;
    --volume=*)
      word_count=$(echo $optarg | cut --output-delimiter=" " -d: -f1,2,3 | wc -w)
      if [ $word_count -ne 2 ] ; then
        echo "volume should be of the form \"dir:mount_point\""
      fi
      dir=$(echo $optarg|cut -d: -f1)
      first_char=$(echo $dir | cut -c1)
      if [ " $first_char" = " /" ] ; then
        if [ ! -d $dir ] ; then
          echo "$dir: No such directory" 1>&2
          usage 1
        fi
      else
        $command volume inspect $dir > /dev/null
        if [ $? -ne 0 ] ; then
          (
          echo "$dir: No such volume"
          echo "List of volumes are"
          $command volume ls
          ) 1>&2
          usage 1
        fi
      fi
      dir=$(echo $optarg|cut -d: -f2)
      first_char=$(echo $dir | cut -c1)
      if [ " $first_char" != " /" ] ; then
        echo "$dir should be a valid path" 1>&2
        usage 1
      fi
      vol_args="$vol_args""-v $optarg "
    ;;
    --systemd=*)
      systemd=$optarg
    ;;
    --args=*)
      echo $optarg | grep "\-d" && detached=1
      extra_args="$extra_args""$optarg "
    ;;
    *)
      echo "invalid option [$1]"
      read key
      usage 1
    ;;
  esac
  shift
done

port_str=""
case $name in
  indimail|indimail-mta|webmail|devel|svscan|test)
    if [ -z "$port_args" ] ; then
      case $name in
        indimail|indimail-mta|webmail)
        port_args="$port_args-p 2025:25   -p 2106:106  -p 2110:110  -p 2143:143 "
        port_args="$port_args-p 2209:209  -p 2366:366  -p 2465:465  -p 2587:587 "
        port_args="$port_args-p 2628:628  -p 2993:993  -p 2995:995  -p 4110:4110 "
        port_args="$port_args-p 4143:4143 -p 9110:9110 -p 9143:9143 -p 8080:80"

        # port_str is used just for display purpose
        NEWLINE=$'\n'
        port_str=""
        port_str="${port_str}  -p 2025:25   -p 2106:106  -p 2110:110  -p 2143:143${NEWLINE}"
        port_str="${port_str}  -p 2209:209  -p 2366:366  -p 2465:465  -p 2587:587${NEWLINE}"
        port_str="${port_str}  -p 2628:628  -p 2993:993  -p 2995:995  -p 4110:4110${NEWLINE}"
        port_str="${port_str}  -p 4143:4143 -p 9110:9110 -p 9143:9143 -p 8080:80"
        ;;
      esac
    fi
    if [ -z "$cap_args" ] ; then
      cap_args="$cap_args--cap-add SYS_PTRACE --cap-add SYS_ADMIN "
      cap_args="$cap_args--cap-add IPC_LOCK   --cap-add SYS_RESOURCE "
    fi
    if [ -z "$host_arg" ] ; then
      host_arg="-h indimail.org"
    fi
    if [ -z "$vol_args" ] ; then
      if [ -d /home/$command/queue ] ; then
        vol_args="$vol_args-v /home/$command/queue:/var/queue "
      fi
      if [ -d /home/$command/mail ] ; then
        vol_args="$vol_args-v /home/$command/mail:/home/mail "
      fi
      if [ -d /usr/local/src ] ; then
        vol_args="$vol_args-v /usr/local/src:/usr/local/src"
      fi
    fi
    if [ " $name" = " devel" -o " $name" = " test" ] ; then
      if [ -z "$systemd" ] ; then
        systemd="bash"
      fi
      if [ -z "$extra_args" ] ; then
        extra_args="-ti --rm"
      fi
    fi
  ;;
esac

if [ -z "$imageid" ] ; then
  usage 1
fi
if [ "$systemd" = "auto" ] ; then
  tag=`$command images | grep  $imageid | awk '{print $2}'`
  case $tag in
    xenial*|debian*|focal*|bionic*|archlinux*)
    systemd=/lib/systemd/systemd
    ;;
    alpine*)
    systemd="/sbin/init"
    ;;
    *)
    systemd=/usr/lib/systemd/systemd
    ;;
  esac
  if [ -z "$cap_args" ] ; then
    cap_args="$cap_args--cap-add SYS_PTRACE --cap-add SYS_ADMIN "
    cap_args="$cap_args--cap-add IPC_LOCK   --cap-add SYS_RESOURCE "
  else
    echo $cap_args|grep SYS_ADMIN > /dev/null
    if [ $? -ne 0 ] ; then
       cap_args="$cap_args--cap-add SYS_ADMIN "
    fi
  fi
elif [ "$systemd" = "svscan" ] ; then
  systemd=""
fi
if [ -z "$extra_args" ] ; then
  detached=1
  extra_args="-d --rm"
fi
if [ -n "$cgroup" -a "$cgroup" = "auto" ] ; then
  cgroup="-v /sys/fs/cgroup:/sys/fs/cgroup:ro"
fi
echo "$command run $cgroup $extra_args"
echo "  --name $name"
echo "  --device /dev/fuse"
if [ -n "$host_arg" ] ; then
  echo " $host_arg"
fi
if [ -n "$cap_args" ] ; then
  echo " $cap_args"
fi
if [ -z "$port_args" ] ; then
  if [ -n "$port_str" ] ; then
    port_args=$port_str
    echo " $port_args"
  fi
fi
if [ -n "$vol_args" ] ; then
  echo "  $vol_args"
fi
echo "  $imageid $systemd"
$command run $cgroup $extra_args \
  --name $name \
  --device /dev/fuse \
  $host_arg $cap_args $port_args $vol_args \
  $imageid $systemd
if [ $? -eq 0 -a $detached -eq 1 ] ; then
  podman exec -ti $name bash
fi
